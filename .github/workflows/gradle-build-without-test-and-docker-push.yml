name: Java CI with Gradle and Docker Push

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: gradle-cache-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-cache-

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      # Build and publish shared library to Maven local
      - name: Publish shared library to Maven local
        run: cd shared && ./gradlew publishToMavenLocal

      # Cache Maven local repository to avoid re-publishing the shared library
      - name: Cache Maven local repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-local-${{ hashFiles('shared/**/*.java') }}
          restore-keys: |
            maven-local-

      # Build the entire project
      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test

      - name: Upload JAR files
        uses: actions/upload-artifact@v4
        with:
          name: jar-files
          path: |
            auth-api/build/libs/*.jar
            user-api/build/libs/*.jar
            recipe-api/build/libs/*.jar

  docker:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'  # Run only on push to main branch
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download JAR files
        uses: actions/download-artifact@v4
        with:
          name: jar-files

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image for auth-api
        run: |
          echo "Building and pushing Docker image for auth-api"
          cd auth-api
          docker build -t develoburs/auth-api:latest --platform=linux/amd64 .
          docker push develoburs/auth-api:latest

      - name: Build and push Docker image for user-api
        run: |
          echo "Building and pushing Docker image for user-api"
          cd user-api
          docker build -t develoburs/user-api:latest --platform=linux/amd64 .
          docker push develoburs/user-api:latest

      - name: Build and push Docker image for recipe-api
        run: |
          echo "Building and pushing Docker image for recipe-api"
          cd recipe-api
          docker build -t develoburs/recipe-api:latest --platform=linux/amd64 .
          docker push develoburs/recipe-api:latest

      - uses: geekyeggo/delete-artifact@v5
        with:
          name: jar-files